# Student name: Jose Manuel Magana Arias
# Birkbeck, University of London
# Module: Cloud Computing 2020
# Coursework log

[29/March/2020]
================================================================
Initial Setup
================================================================
- create a new virtual environment (cw-env) and activate it
- install the following packages: 
	+ Django 3.0.3
	+ Django REST framwork
	+ Django oAuth toolkit
- setup a new Django project called "cwsite"
- change the name of the folder to src.

================================================================
Implement version control via GitHub
================================================================
- create a new repo in GitHub called "cc"
- configure user name (jmagan01) and user email
- initialize git with /home/student/cw-env/src/
- cd src and clone the git repository using the HTTP URL
- add the repository as origin
- commit and push chanegs -m "create Django project"
- create change.log and readme.md
- commit and push chanegs -m "add a change.log and readme.md" 

================================================================
Development of an authorization server
================================================================
- make a number of changes in the settings.py file
	+ add ip to the ALLOWED_HOSTS
	+ set the oAuth and the rest_framework in the INSTALLED_APPS
	+ add a new middleware (oauth2_provider.middleware)
	+ add a REST_FRAEWORK section code
	+ add an AUTHENTICATION_BACKENDS section code
- add OAuth2 provider to the urls.py file,
	this creates the url: http://IP:8000/o (“o” for “oAuth”))
- run migrations
- create superuser (admin)
- commit and push changes -m "create an authorisation server"

================================================================
Development of an application server (“User” application)
================================================================
- create a new 'users' application
- add the users a application to settings.py
- create a new serializer to model our user data
- enter in the Django admin panel and register a new application
- create the API views (use “views.py” from dropbox) for the user
	application in order to allow:
	+ Register a new user
	+ Get a token (login)
	+ Refresh a token (next time login)
	+ Revoke a token (log out)
- create a new file in the users app called urls.py.
- add the authentication url to the main app.
- create new users using the API interface.
- commit and push changes -m "create a new 'users' application"

[30/March/2020]
================================================================
Development of a resource server (Data model using Django ORM)
================================================================
- create a new application called 'cwapi'
- register cwapi in the settings.py file
- apply migrations
- create a database (cwapi/models.py)
	+ add a Product class
- make migrations
- register the Product class in the admin site (cwapi/admin.py)
- do some dummy data entry from http://193.61.36.152:8000/admin/cwapi/product/

================================================================
Setup Django REST framework
================================================================
- install django rest framework
- add “rest_framework" to cwsite/settings.py

================================================================
Serialise the model
================================================================
- create a new file cwapi/serializers.py
	+ create class ProductSerializer with some fields

================================================================
Create the URI endpoints to show data
================================================================
- create a view to render the Products objects
	+ edit the cwapi/views.py to query all data from the database
- create the project URLs, link the view to a URI in cwsite/urls.py
- create the myapi/urls.py - router creates the URI for the API